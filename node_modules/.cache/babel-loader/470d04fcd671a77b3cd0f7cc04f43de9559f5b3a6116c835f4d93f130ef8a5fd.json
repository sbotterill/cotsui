{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sonny\\\\Documents\\\\cots-ui\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\nimport DrawerAppBar from './components/AppBar';\nimport CollapsibleTable from './components/CollapsableTable';\nimport CircularLoading from './components/Loading';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst darkTheme = createTheme({\n  palette: {\n    mode: 'dark'\n  }\n});\nconst getThisWeeksTuesday = () => {\n  const today = new Date();\n  const dayOfWeek = today.getDay(); // Sunday = 0, ..., Saturday = 6\n  const diffToTuesday = (2 - dayOfWeek + 7) % 7;\n  const tuesday = new Date(today);\n  tuesday.setDate(today.getDate() + diffToTuesday);\n  tuesday.setHours(0, 0, 0, 0);\n  return formatLocalIso(tuesday);\n};\nconst formatLocalIso = date => {\n  const pad = n => n.toString().padStart(2, '0');\n  return `${date.getFullYear()}-${pad(date.getMonth() + 1)}-${pad(date.getDate())}T${pad(date.getHours())}:${pad(date.getMinutes())}:${pad(date.getSeconds())}.000`;\n};\nconst getLastWeeksTuesday = () => {\n  const today = new Date();\n  const dayOfWeek = today.getDay(); // Sunday = 0, ..., Saturday = 6\n\n  // Get how many days have passed since *last* Tuesday\n  const diffToLastTuesday = (dayOfWeek - 2 + 7) % 7 + 7;\n  const lastTuesday = new Date(today);\n  lastTuesday.setDate(today.getDate() - diffToLastTuesday);\n  lastTuesday.setHours(0, 0, 0, 0);\n  return formatLocalIso(lastTuesday);\n};\nasync function fetchData() {\n  let fullList = [];\n  let exchangesList = [];\n  let reportDate = await getThisWeeksTuesday();\n  try {\n    const firstResponse = await axios.get(\"https://publicreporting.cftc.gov/resource/6dca-aqww.json\");\n\n    // Build all the individual requests into an array\n    const requests = firstResponse.data.map(async element => {\n      if (element.cftc_market_code !== \"NODX\" && element.cftc_market_code !== \"IFED\") {\n        try {\n          let response = await axios.get(`https://publicreporting.cftc.gov/resource/6dca-aqww.json?cftc_contract_market_code=${element.cftc_contract_market_code}&report_date_as_yyyy_mm_dd=${reportDate}`);\n          if (response.data.length === 0) {\n            reportDate = await getLastWeeksTuesday();\n            response = await axios.get(`https://publicreporting.cftc.gov/resource/6dca-aqww.json?cftc_contract_market_code=${element.cftc_contract_market_code}&report_date_as_yyyy_mm_dd=${reportDate}`);\n          }\n          const data = response.data[0];\n          if (!data || !data.noncomm_positions_long_all || !data.noncomm_positions_short_all || data.noncomm_positions_long_all === \"undefined\") {\n            return; // Skip this entry if undefined positions\n          }\n          const commercialTotalPostitions = +data.comm_positions_long_all + +data.comm_positions_short_all;\n          const commercialPercentageLong = +data.comm_positions_long_all / commercialTotalPostitions;\n          const commercialPercentageShort = +data.comm_positions_short_all / commercialTotalPostitions;\n          const nonCommercialTotalPostitions = +data.noncomm_positions_long_all + +data.noncomm_positions_short_all;\n          const nonCommercialPercentageLong = +data.noncomm_positions_long_all / nonCommercialTotalPostitions;\n          const nonCommercialPercentageShort = +data.noncomm_positions_short_all / nonCommercialTotalPostitions;\n          const nonReptTotalPostitions = +data.nonrept_positions_long_all + +data.nonrept_positions_short_all;\n          const nonReptPercentageLong = +data.nonrept_positions_long_all / nonReptTotalPostitions;\n          const nonReptPercentageShort = +data.nonrept_positions_short_all / nonReptTotalPostitions;\n          const obj = {\n            \"commodity\": element.contract_market_name,\n            \"contract_code\": element.cftc_contract_market_code,\n            \"market_and_exchange_name\": element.market_and_exchange_names,\n            \"market_code\": element.cftc_market_code,\n            \"report_date\": reportDate,\n            \"commerical_long\": +data.comm_positions_long_all,\n            \"commerical_long_change\": +data.change_in_comm_long_all,\n            \"commerical_short\": +data.comm_positions_short_all,\n            \"commerical_short_change\": +data.change_in_comm_short_all,\n            \"commerical_total\": commercialTotalPostitions,\n            \"commerical_percentage_long\": commercialPercentageLong,\n            \"commerical_percentage_short\": commercialPercentageShort,\n            \"non_commercial_long\": +data.noncomm_positions_long_all,\n            \"non_commercial_long_change\": +data.change_in_noncomm_long_all,\n            \"non_commercial_short\": +data.noncomm_positions_short_all,\n            \"non_commercial_short_change\": +data.change_in_noncomm_short_all,\n            \"non_commercial_total\": nonCommercialTotalPostitions,\n            \"non_commercial_percentage_long\": nonCommercialPercentageLong,\n            \"non_commercial_percentage_short\": nonCommercialPercentageShort,\n            \"non_reportable_long\": +data.nonrept_positions_long_all,\n            \"non_reportable_long_change\": +data.change_in_nonrept_long_all,\n            \"non_reportable_short\": +data.nonrept_positions_short_all,\n            \"non_reportable_short_change\": +data.change_in_nonrept_short_all,\n            \"non_reportable_total\": nonReptTotalPostitions,\n            \"non_reportable_percentage_long\": nonReptPercentageLong,\n            \"non_reportable_percentage_short\": nonReptPercentageShort\n          };\n          if (!fullList.some(item => item.commodity === obj.commodity)) {\n            fullList.push(obj);\n          }\n          let market_exchange_full_name = element.market_and_exchange_names.split(\"-\");\n          let words = [\"CHICAGO MERCANTILE EXCHANGE\", \"CHICAGO BOARD OF TRADE\", \"COMMODITY EXCHANGE INC\", \"CBOE FUTURES EXCHANGE\", \"ICE FUTURES U.S.\", \"NEW YORK MERCANTILE EXCHANGE\"];\n          const found = words.some(word => market_exchange_full_name[1].includes(word));\n          if (found) {\n            if (!exchangesList.includes(`${element.cftc_market_code.trim()} - ${market_exchange_full_name[1].trim()}`)) {\n              exchangesList.push(`${element.cftc_market_code.trim()} - ${market_exchange_full_name[1].trim()}`);\n            }\n          }\n        } catch (err) {\n          console.warn(`Failed to fetch data for ${element.contract_market_name}:`, err.message);\n        }\n      } else {\n        return;\n      }\n    });\n\n    // Wait for all requests to finish\n    await Promise.all(requests);\n\n    // Now sort the list\n    let sortedExchanges = exchangesList.sort((a, b) => a.localeCompare(b));\n    let sortedFutures = fullList.sort((a, b) => a.commodity.localeCompare(b.commodity));\n    return [sortedExchanges, sortedFutures, reportDate];\n  } catch (error) {\n    console.error(\"Error fetching data:\", error);\n  }\n}\nexport default function App() {\n  _s();\n  const [futuresData, setFuturesData] = React.useState([]);\n  const [filteredData, setFilteredData] = React.useState([]);\n  const [exchanges, setExchanges] = React.useState([]);\n  const [lastUpdated, setLastUpdated] = React.useState([]);\n  React.useEffect(() => {\n    const loadData = async () => {\n      const dataArr = await fetchData();\n      setExchanges(dataArr[0]);\n      setFuturesData(dataArr[1]);\n      setFilteredData(dataArr[1]);\n      setLastUpdated(dataArr[2]);\n    };\n    loadData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: futuresData.length > 0 && exchanges.length > 0 ? /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: darkTheme,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-js-container\",\n        children: [/*#__PURE__*/_jsxDEV(DrawerAppBar, {\n          futuresData: futuresData,\n          setFilteredData: setFilteredData,\n          reportDate: lastUpdated\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            paddingTop: '90px',\n            width: \"100%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(CollapsibleTable, {\n            futuresData: filteredData,\n            exchanges: exchanges\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        alignContent: \"center\",\n        justifyContent: \"center\",\n        height: \"100vh\"\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularLoading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"vfnIc2oQj7mz9Fn4rGd21BJdocg=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","axios","DrawerAppBar","CollapsibleTable","CircularLoading","ThemeProvider","createTheme","jsxDEV","_jsxDEV","Fragment","_Fragment","darkTheme","palette","mode","getThisWeeksTuesday","today","Date","dayOfWeek","getDay","diffToTuesday","tuesday","setDate","getDate","setHours","formatLocalIso","date","pad","n","toString","padStart","getFullYear","getMonth","getHours","getMinutes","getSeconds","getLastWeeksTuesday","diffToLastTuesday","lastTuesday","fetchData","fullList","exchangesList","reportDate","firstResponse","get","requests","data","map","element","cftc_market_code","response","cftc_contract_market_code","length","noncomm_positions_long_all","noncomm_positions_short_all","commercialTotalPostitions","comm_positions_long_all","comm_positions_short_all","commercialPercentageLong","commercialPercentageShort","nonCommercialTotalPostitions","nonCommercialPercentageLong","nonCommercialPercentageShort","nonReptTotalPostitions","nonrept_positions_long_all","nonrept_positions_short_all","nonReptPercentageLong","nonReptPercentageShort","obj","contract_market_name","market_and_exchange_names","change_in_comm_long_all","change_in_comm_short_all","change_in_noncomm_long_all","change_in_noncomm_short_all","change_in_nonrept_long_all","change_in_nonrept_short_all","some","item","commodity","push","market_exchange_full_name","split","words","found","word","includes","trim","err","console","warn","message","Promise","all","sortedExchanges","sort","a","b","localeCompare","sortedFutures","error","App","_s","futuresData","setFuturesData","useState","filteredData","setFilteredData","exchanges","setExchanges","lastUpdated","setLastUpdated","useEffect","loadData","dataArr","children","theme","className","fileName","_jsxFileName","lineNumber","columnNumber","style","paddingTop","width","display","alignContent","justifyContent","height","_c","$RefreshReg$"],"sources":["C:/Users/sonny/Documents/cots-ui/src/App.js"],"sourcesContent":["import * as React from 'react';\r\nimport axios from 'axios';\r\nimport './App.css';\r\nimport '@fontsource/roboto/300.css';\r\nimport '@fontsource/roboto/400.css';\r\nimport '@fontsource/roboto/500.css';\r\nimport '@fontsource/roboto/700.css';\r\nimport DrawerAppBar from './components/AppBar';\r\nimport CollapsibleTable from './components/CollapsableTable';\r\nimport CircularLoading from './components/Loading';\r\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\r\n\r\nconst darkTheme = createTheme({\r\n  palette: {\r\n    mode: 'dark',\r\n  },\r\n});\r\n\r\nconst getThisWeeksTuesday = () => {\r\n  const today = new Date();\r\n  const dayOfWeek = today.getDay(); // Sunday = 0, ..., Saturday = 6\r\n  const diffToTuesday = (2 - dayOfWeek + 7) % 7;\r\n  const tuesday = new Date(today);\r\n  tuesday.setDate(today.getDate() + diffToTuesday);\r\n  tuesday.setHours(0, 0, 0, 0);\r\n  return formatLocalIso(tuesday);\r\n};\r\n\r\nconst formatLocalIso = (date) => {\r\n  const pad = (n) => n.toString().padStart(2, '0');\r\n\r\n  return `${date.getFullYear()}-${pad(date.getMonth() + 1)}-${pad(date.getDate())}T${pad(date.getHours())}:${pad(date.getMinutes())}:${pad(date.getSeconds())}.000`;\r\n};\r\n\r\nconst getLastWeeksTuesday = () => {\r\n  const today = new Date();\r\n  const dayOfWeek = today.getDay(); // Sunday = 0, ..., Saturday = 6\r\n\r\n  // Get how many days have passed since *last* Tuesday\r\n  const diffToLastTuesday = ((dayOfWeek - 2 + 7) % 7) + 7;\r\n\r\n  const lastTuesday = new Date(today);\r\n  lastTuesday.setDate(today.getDate() - diffToLastTuesday);\r\n  lastTuesday.setHours(0, 0, 0, 0);\r\n\r\n  return formatLocalIso(lastTuesday);\r\n};\r\n\r\nasync function fetchData() {\r\n  let fullList = [];\r\n  let exchangesList = [];\r\n  let reportDate = await getThisWeeksTuesday();\r\n\r\n  try {\r\n    const firstResponse = await axios.get(\"https://publicreporting.cftc.gov/resource/6dca-aqww.json\");\r\n   \r\n    // Build all the individual requests into an array\r\n    const requests = firstResponse.data.map(async element => {\r\n      if (element.cftc_market_code !== \"NODX\" && element.cftc_market_code !== \"IFED\") {\r\n        try {\r\n          let response = await axios.get(\r\n            `https://publicreporting.cftc.gov/resource/6dca-aqww.json?cftc_contract_market_code=${element.cftc_contract_market_code}&report_date_as_yyyy_mm_dd=${reportDate}`\r\n          );\r\n          if (response.data.length === 0) {\r\n            reportDate = await getLastWeeksTuesday()\r\n            response = await axios.get(\r\n              `https://publicreporting.cftc.gov/resource/6dca-aqww.json?cftc_contract_market_code=${element.cftc_contract_market_code}&report_date_as_yyyy_mm_dd=${reportDate}`\r\n            );\r\n          }\r\n\r\n          const data = response.data[0];\r\n\r\n          if (\r\n            !data ||\r\n            !data.noncomm_positions_long_all ||\r\n            !data.noncomm_positions_short_all ||\r\n            data.noncomm_positions_long_all === \"undefined\"\r\n          ) {\r\n            return; // Skip this entry if undefined positions\r\n          }\r\n\r\n          const commercialTotalPostitions = +data.comm_positions_long_all + +data.comm_positions_short_all;\r\n          const commercialPercentageLong = +data.comm_positions_long_all / commercialTotalPostitions;\r\n          const commercialPercentageShort = +data.comm_positions_short_all / commercialTotalPostitions;\r\n          const nonCommercialTotalPostitions = +data.noncomm_positions_long_all + +data.noncomm_positions_short_all;\r\n          const nonCommercialPercentageLong = +data.noncomm_positions_long_all / nonCommercialTotalPostitions;\r\n          const nonCommercialPercentageShort = +data.noncomm_positions_short_all / nonCommercialTotalPostitions;\r\n          const nonReptTotalPostitions = +data.nonrept_positions_long_all + +data.nonrept_positions_short_all;\r\n          const nonReptPercentageLong = +data.nonrept_positions_long_all / nonReptTotalPostitions;\r\n          const nonReptPercentageShort = +data.nonrept_positions_short_all / nonReptTotalPostitions;\r\n\r\n          const obj = {\r\n            \"commodity\": element.contract_market_name,\r\n            \"contract_code\": element.cftc_contract_market_code,\r\n            \"market_and_exchange_name\": element.market_and_exchange_names,\r\n            \"market_code\": element.cftc_market_code, \r\n            \"report_date\": reportDate,\r\n            \"commerical_long\": +data.comm_positions_long_all,\r\n            \"commerical_long_change\": +data.change_in_comm_long_all,\r\n            \"commerical_short\": +data.comm_positions_short_all,\r\n            \"commerical_short_change\": +data.change_in_comm_short_all,\r\n            \"commerical_total\": commercialTotalPostitions,\r\n            \"commerical_percentage_long\": commercialPercentageLong,\r\n            \"commerical_percentage_short\": commercialPercentageShort,\r\n            \"non_commercial_long\": +data.noncomm_positions_long_all,\r\n            \"non_commercial_long_change\": +data.change_in_noncomm_long_all,\r\n            \"non_commercial_short\": +data.noncomm_positions_short_all,\r\n            \"non_commercial_short_change\": +data.change_in_noncomm_short_all,\r\n            \"non_commercial_total\": nonCommercialTotalPostitions,\r\n            \"non_commercial_percentage_long\": nonCommercialPercentageLong,\r\n            \"non_commercial_percentage_short\": nonCommercialPercentageShort,\r\n            \"non_reportable_long\": +data.nonrept_positions_long_all,\r\n            \"non_reportable_long_change\": +data.change_in_nonrept_long_all,\r\n            \"non_reportable_short\": +data.nonrept_positions_short_all,\r\n            \"non_reportable_short_change\": +data.change_in_nonrept_short_all,\r\n            \"non_reportable_total\": nonReptTotalPostitions,\r\n            \"non_reportable_percentage_long\": nonReptPercentageLong,\r\n            \"non_reportable_percentage_short\": nonReptPercentageShort,\r\n          };\r\n\r\n          if (!fullList.some(item => item.commodity === obj.commodity)) {\r\n            fullList.push(obj);\r\n          }\r\n\r\n          let market_exchange_full_name = element.market_and_exchange_names.split(\"-\");\r\n          let words = [\"CHICAGO MERCANTILE EXCHANGE\", \"CHICAGO BOARD OF TRADE\", \"COMMODITY EXCHANGE INC\", \"CBOE FUTURES EXCHANGE\", \"ICE FUTURES U.S.\", \"NEW YORK MERCANTILE EXCHANGE\"]\r\n          const found = words.some(word => market_exchange_full_name[1].includes(word));\r\n          \r\n          if (found) {         \r\n            if (!exchangesList.includes(`${element.cftc_market_code.trim()} - ${market_exchange_full_name[1].trim()}`)) {\r\n              exchangesList.push(`${element.cftc_market_code.trim()} - ${market_exchange_full_name[1].trim()}`);\r\n            }\r\n          }\r\n\r\n        } catch (err) {\r\n          console.warn(`Failed to fetch data for ${element.contract_market_name}:`, err.message);\r\n        }\r\n      } else {\r\n        return;\r\n      }\r\n    });\r\n\r\n    // Wait for all requests to finish\r\n    await Promise.all(requests);\r\n\r\n    // Now sort the list\r\n    let sortedExchanges = exchangesList.sort((a, b) => a.localeCompare(b));\r\n    let sortedFutures = fullList.sort((a, b) => a.commodity.localeCompare(b.commodity));\r\n\r\n    return [sortedExchanges, sortedFutures, reportDate]\r\n    \r\n  } catch (error) {\r\n    console.error(\"Error fetching data:\", error);\r\n  }\r\n}\r\n\r\nexport default function App() {\r\n  const [futuresData, setFuturesData] = React.useState([])\r\n  const [filteredData, setFilteredData] = React.useState([])\r\n  const [exchanges, setExchanges] = React.useState([])\r\n  const [lastUpdated, setLastUpdated] = React.useState([])\r\n\r\n  React.useEffect(() => {\r\n    const loadData = async () => {\r\n      const dataArr = await fetchData();\r\n      setExchanges(dataArr[0]);\r\n      setFuturesData(dataArr[1]);\r\n      setFilteredData(dataArr[1])\r\n      setLastUpdated(dataArr[2]);\r\n    };\r\n    loadData();\r\n  }, []);\r\n  \r\n  return (\r\n    <>\r\n      {futuresData.length > 0 && exchanges.length > 0 ? (\r\n        <ThemeProvider theme={darkTheme}>\r\n          <div className=\"app-js-container\">\r\n            <DrawerAppBar futuresData={futuresData} setFilteredData={setFilteredData} reportDate={lastUpdated}/>\r\n            <div style={{ paddingTop: '90px', width: \"100%\" }}>\r\n              <CollapsibleTable futuresData={filteredData} exchanges={exchanges} />\r\n            </div>\r\n          </div>\r\n        </ThemeProvider>\r\n      ) : (\r\n        <div style={{display: \"flex\", alignContent: \"center\", justifyContent: \"center\", height: \"100vh\"}}>\r\n          <CircularLoading />\r\n        </div>\r\n      )}\r\n    </>   \r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAClB,OAAO,4BAA4B;AACnC,OAAO,4BAA4B;AACnC,OAAO,4BAA4B;AACnC,OAAO,4BAA4B;AACnC,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,OAAOC,gBAAgB,MAAM,+BAA+B;AAC5D,OAAOC,eAAe,MAAM,sBAAsB;AAClD,SAASC,aAAa,EAAEC,WAAW,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAElE,MAAMC,SAAS,GAAGL,WAAW,CAAC;EAC5BM,OAAO,EAAE;IACPC,IAAI,EAAE;EACR;AACF,CAAC,CAAC;AAEF,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAChC,MAAMC,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC;EACxB,MAAMC,SAAS,GAAGF,KAAK,CAACG,MAAM,CAAC,CAAC,CAAC,CAAC;EAClC,MAAMC,aAAa,GAAG,CAAC,CAAC,GAAGF,SAAS,GAAG,CAAC,IAAI,CAAC;EAC7C,MAAMG,OAAO,GAAG,IAAIJ,IAAI,CAACD,KAAK,CAAC;EAC/BK,OAAO,CAACC,OAAO,CAACN,KAAK,CAACO,OAAO,CAAC,CAAC,GAAGH,aAAa,CAAC;EAChDC,OAAO,CAACG,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAC5B,OAAOC,cAAc,CAACJ,OAAO,CAAC;AAChC,CAAC;AAED,MAAMI,cAAc,GAAIC,IAAI,IAAK;EAC/B,MAAMC,GAAG,GAAIC,CAAC,IAAKA,CAAC,CAACC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EAEhD,OAAO,GAAGJ,IAAI,CAACK,WAAW,CAAC,CAAC,IAAIJ,GAAG,CAACD,IAAI,CAACM,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,IAAIL,GAAG,CAACD,IAAI,CAACH,OAAO,CAAC,CAAC,CAAC,IAAII,GAAG,CAACD,IAAI,CAACO,QAAQ,CAAC,CAAC,CAAC,IAAIN,GAAG,CAACD,IAAI,CAACQ,UAAU,CAAC,CAAC,CAAC,IAAIP,GAAG,CAACD,IAAI,CAACS,UAAU,CAAC,CAAC,CAAC,MAAM;AACnK,CAAC;AAED,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAChC,MAAMpB,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC;EACxB,MAAMC,SAAS,GAAGF,KAAK,CAACG,MAAM,CAAC,CAAC,CAAC,CAAC;;EAElC;EACA,MAAMkB,iBAAiB,GAAI,CAACnB,SAAS,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,GAAI,CAAC;EAEvD,MAAMoB,WAAW,GAAG,IAAIrB,IAAI,CAACD,KAAK,CAAC;EACnCsB,WAAW,CAAChB,OAAO,CAACN,KAAK,CAACO,OAAO,CAAC,CAAC,GAAGc,iBAAiB,CAAC;EACxDC,WAAW,CAACd,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAEhC,OAAOC,cAAc,CAACa,WAAW,CAAC;AACpC,CAAC;AAED,eAAeC,SAASA,CAAA,EAAG;EACzB,IAAIC,QAAQ,GAAG,EAAE;EACjB,IAAIC,aAAa,GAAG,EAAE;EACtB,IAAIC,UAAU,GAAG,MAAM3B,mBAAmB,CAAC,CAAC;EAE5C,IAAI;IACF,MAAM4B,aAAa,GAAG,MAAMzC,KAAK,CAAC0C,GAAG,CAAC,0DAA0D,CAAC;;IAEjG;IACA,MAAMC,QAAQ,GAAGF,aAAa,CAACG,IAAI,CAACC,GAAG,CAAC,MAAMC,OAAO,IAAI;MACvD,IAAIA,OAAO,CAACC,gBAAgB,KAAK,MAAM,IAAID,OAAO,CAACC,gBAAgB,KAAK,MAAM,EAAE;QAC9E,IAAI;UACF,IAAIC,QAAQ,GAAG,MAAMhD,KAAK,CAAC0C,GAAG,CAC5B,sFAAsFI,OAAO,CAACG,yBAAyB,8BAA8BT,UAAU,EACjK,CAAC;UACD,IAAIQ,QAAQ,CAACJ,IAAI,CAACM,MAAM,KAAK,CAAC,EAAE;YAC9BV,UAAU,GAAG,MAAMN,mBAAmB,CAAC,CAAC;YACxCc,QAAQ,GAAG,MAAMhD,KAAK,CAAC0C,GAAG,CACxB,sFAAsFI,OAAO,CAACG,yBAAyB,8BAA8BT,UAAU,EACjK,CAAC;UACH;UAEA,MAAMI,IAAI,GAAGI,QAAQ,CAACJ,IAAI,CAAC,CAAC,CAAC;UAE7B,IACE,CAACA,IAAI,IACL,CAACA,IAAI,CAACO,0BAA0B,IAChC,CAACP,IAAI,CAACQ,2BAA2B,IACjCR,IAAI,CAACO,0BAA0B,KAAK,WAAW,EAC/C;YACA,OAAO,CAAC;UACV;UAEA,MAAME,yBAAyB,GAAG,CAACT,IAAI,CAACU,uBAAuB,GAAG,CAACV,IAAI,CAACW,wBAAwB;UAChG,MAAMC,wBAAwB,GAAG,CAACZ,IAAI,CAACU,uBAAuB,GAAGD,yBAAyB;UAC1F,MAAMI,yBAAyB,GAAG,CAACb,IAAI,CAACW,wBAAwB,GAAGF,yBAAyB;UAC5F,MAAMK,4BAA4B,GAAG,CAACd,IAAI,CAACO,0BAA0B,GAAG,CAACP,IAAI,CAACQ,2BAA2B;UACzG,MAAMO,2BAA2B,GAAG,CAACf,IAAI,CAACO,0BAA0B,GAAGO,4BAA4B;UACnG,MAAME,4BAA4B,GAAG,CAAChB,IAAI,CAACQ,2BAA2B,GAAGM,4BAA4B;UACrG,MAAMG,sBAAsB,GAAG,CAACjB,IAAI,CAACkB,0BAA0B,GAAG,CAAClB,IAAI,CAACmB,2BAA2B;UACnG,MAAMC,qBAAqB,GAAG,CAACpB,IAAI,CAACkB,0BAA0B,GAAGD,sBAAsB;UACvF,MAAMI,sBAAsB,GAAG,CAACrB,IAAI,CAACmB,2BAA2B,GAAGF,sBAAsB;UAEzF,MAAMK,GAAG,GAAG;YACV,WAAW,EAAEpB,OAAO,CAACqB,oBAAoB;YACzC,eAAe,EAAErB,OAAO,CAACG,yBAAyB;YAClD,0BAA0B,EAAEH,OAAO,CAACsB,yBAAyB;YAC7D,aAAa,EAAEtB,OAAO,CAACC,gBAAgB;YACvC,aAAa,EAAEP,UAAU;YACzB,iBAAiB,EAAE,CAACI,IAAI,CAACU,uBAAuB;YAChD,wBAAwB,EAAE,CAACV,IAAI,CAACyB,uBAAuB;YACvD,kBAAkB,EAAE,CAACzB,IAAI,CAACW,wBAAwB;YAClD,yBAAyB,EAAE,CAACX,IAAI,CAAC0B,wBAAwB;YACzD,kBAAkB,EAAEjB,yBAAyB;YAC7C,4BAA4B,EAAEG,wBAAwB;YACtD,6BAA6B,EAAEC,yBAAyB;YACxD,qBAAqB,EAAE,CAACb,IAAI,CAACO,0BAA0B;YACvD,4BAA4B,EAAE,CAACP,IAAI,CAAC2B,0BAA0B;YAC9D,sBAAsB,EAAE,CAAC3B,IAAI,CAACQ,2BAA2B;YACzD,6BAA6B,EAAE,CAACR,IAAI,CAAC4B,2BAA2B;YAChE,sBAAsB,EAAEd,4BAA4B;YACpD,gCAAgC,EAAEC,2BAA2B;YAC7D,iCAAiC,EAAEC,4BAA4B;YAC/D,qBAAqB,EAAE,CAAChB,IAAI,CAACkB,0BAA0B;YACvD,4BAA4B,EAAE,CAAClB,IAAI,CAAC6B,0BAA0B;YAC9D,sBAAsB,EAAE,CAAC7B,IAAI,CAACmB,2BAA2B;YACzD,6BAA6B,EAAE,CAACnB,IAAI,CAAC8B,2BAA2B;YAChE,sBAAsB,EAAEb,sBAAsB;YAC9C,gCAAgC,EAAEG,qBAAqB;YACvD,iCAAiC,EAAEC;UACrC,CAAC;UAED,IAAI,CAAC3B,QAAQ,CAACqC,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,SAAS,KAAKX,GAAG,CAACW,SAAS,CAAC,EAAE;YAC5DvC,QAAQ,CAACwC,IAAI,CAACZ,GAAG,CAAC;UACpB;UAEA,IAAIa,yBAAyB,GAAGjC,OAAO,CAACsB,yBAAyB,CAACY,KAAK,CAAC,GAAG,CAAC;UAC5E,IAAIC,KAAK,GAAG,CAAC,6BAA6B,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,uBAAuB,EAAE,kBAAkB,EAAE,8BAA8B,CAAC;UAC5K,MAAMC,KAAK,GAAGD,KAAK,CAACN,IAAI,CAACQ,IAAI,IAAIJ,yBAAyB,CAAC,CAAC,CAAC,CAACK,QAAQ,CAACD,IAAI,CAAC,CAAC;UAE7E,IAAID,KAAK,EAAE;YACT,IAAI,CAAC3C,aAAa,CAAC6C,QAAQ,CAAC,GAAGtC,OAAO,CAACC,gBAAgB,CAACsC,IAAI,CAAC,CAAC,MAAMN,yBAAyB,CAAC,CAAC,CAAC,CAACM,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE;cAC1G9C,aAAa,CAACuC,IAAI,CAAC,GAAGhC,OAAO,CAACC,gBAAgB,CAACsC,IAAI,CAAC,CAAC,MAAMN,yBAAyB,CAAC,CAAC,CAAC,CAACM,IAAI,CAAC,CAAC,EAAE,CAAC;YACnG;UACF;QAEF,CAAC,CAAC,OAAOC,GAAG,EAAE;UACZC,OAAO,CAACC,IAAI,CAAC,4BAA4B1C,OAAO,CAACqB,oBAAoB,GAAG,EAAEmB,GAAG,CAACG,OAAO,CAAC;QACxF;MACF,CAAC,MAAM;QACL;MACF;IACF,CAAC,CAAC;;IAEF;IACA,MAAMC,OAAO,CAACC,GAAG,CAAChD,QAAQ,CAAC;;IAE3B;IACA,IAAIiD,eAAe,GAAGrD,aAAa,CAACsD,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,aAAa,CAACD,CAAC,CAAC,CAAC;IACtE,IAAIE,aAAa,GAAG3D,QAAQ,CAACuD,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACjB,SAAS,CAACmB,aAAa,CAACD,CAAC,CAAClB,SAAS,CAAC,CAAC;IAEnF,OAAO,CAACe,eAAe,EAAEK,aAAa,EAAEzD,UAAU,CAAC;EAErD,CAAC,CAAC,OAAO0D,KAAK,EAAE;IACdX,OAAO,CAACW,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;EAC9C;AACF;AAEA,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGvG,KAAK,CAACwG,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAG1G,KAAK,CAACwG,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAG5G,KAAK,CAACwG,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACK,WAAW,EAAEC,cAAc,CAAC,GAAG9G,KAAK,CAACwG,QAAQ,CAAC,EAAE,CAAC;EAExDxG,KAAK,CAAC+G,SAAS,CAAC,MAAM;IACpB,MAAMC,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3B,MAAMC,OAAO,GAAG,MAAM3E,SAAS,CAAC,CAAC;MACjCsE,YAAY,CAACK,OAAO,CAAC,CAAC,CAAC,CAAC;MACxBV,cAAc,CAACU,OAAO,CAAC,CAAC,CAAC,CAAC;MAC1BP,eAAe,CAACO,OAAO,CAAC,CAAC,CAAC,CAAC;MAC3BH,cAAc,CAACG,OAAO,CAAC,CAAC,CAAC,CAAC;IAC5B,CAAC;IACDD,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACExG,OAAA,CAAAE,SAAA;IAAAwG,QAAA,EACGZ,WAAW,CAACnD,MAAM,GAAG,CAAC,IAAIwD,SAAS,CAACxD,MAAM,GAAG,CAAC,gBAC7C3C,OAAA,CAACH,aAAa;MAAC8G,KAAK,EAAExG,SAAU;MAAAuG,QAAA,eAC9B1G,OAAA;QAAK4G,SAAS,EAAC,kBAAkB;QAAAF,QAAA,gBAC/B1G,OAAA,CAACN,YAAY;UAACoG,WAAW,EAAEA,WAAY;UAACI,eAAe,EAAEA,eAAgB;UAACjE,UAAU,EAAEoE;QAAY;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eACpGhH,OAAA;UAAKiH,KAAK,EAAE;YAAEC,UAAU,EAAE,MAAM;YAAEC,KAAK,EAAE;UAAO,CAAE;UAAAT,QAAA,eAChD1G,OAAA,CAACL,gBAAgB;YAACmG,WAAW,EAAEG,YAAa;YAACE,SAAS,EAAEA;UAAU;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO,CAAC,gBAEhBhH,OAAA;MAAKiH,KAAK,EAAE;QAACG,OAAO,EAAE,MAAM;QAAEC,YAAY,EAAE,QAAQ;QAAEC,cAAc,EAAE,QAAQ;QAAEC,MAAM,EAAE;MAAO,CAAE;MAAAb,QAAA,eAC/F1G,OAAA,CAACJ,eAAe;QAAAiH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB;EACN,gBACD,CAAC;AAEP;AAACnB,EAAA,CAnCuBD,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}